name: Destroy Resources
on:
  workflow_dispatch:
env:
  TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_VAR_SSH_KEY: ${{ secrets.SSH_KEY }}
  TF_VAR_SSH_KEY_PUB: ${{ secrets.SSH_KEY_PUB }}
jobs:
  destroy-resources:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3

    - name: Get repo name
      run: |
        echo "TF_VAR_REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV
        echo "TF_VAR_FULL_REPO_NAME=${GITHUB_REPOSITORY}" >> $GITHUB_ENV

    - name: Create provider.tf and pass variables dynamicaly
      id: backend
      run: |
        cat <<EOF > ./provider.tf
        
        terraform {
          required_providers {
            aws = {
              source  = "hashicorp/aws"
              # version = "5.99.0"
            }
          }

          backend "s3" {
            bucket         = "${{ env.TF_VAR_REPO_NAME }}-terraform-tfstate"
            key            = "terraform.tfstate"
            # dynamodb_table = "main-tfstate"
            region         = "${{ secrets.AWS_REGION }}"
          }
        }

        provider "aws" {
          region = "${{ secrets.AWS_REGION }}"
        }
        EOF
        cat ./provider.tf

    - name: Terraform init
      id: init
      run: terraform init -reconfigure

    - name: Terraform destroy
      id: destroy
      run: terraform destroy --auto-approve

    - name: Remove tfstate bucket
      id: bucket
      run: |
        aws s3 rm s3://${{ env.TF_VAR_REPO_NAME }}-terraform-tfstate --recursive
        aws s3api delete-bucket --bucket ${{ env.TF_VAR_REPO_NAME }}-terraform-tfstate